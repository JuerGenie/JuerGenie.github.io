---
import { ArticleData } from "@src/models/article-frontmatter";
import { getArticleParentPath } from "@src/utils/url";
import BaseImage from "./BaseImage.astro";
import GroupLink from "./GroupLink.astro";
import { Icon } from "astro-icon";
import { formatDate } from "@src/utils/date";

export interface Props {
  article: ArticleData["frontmatter"];

  hideDate?: boolean;
}

const { article, hideDate } = Astro.props as Props;
const {
  coverImage,
  title,
  hideParent,
  description,
  url,
  publishDate,
  updatedDate,
} = article;

let baseUrl = url.replace(import.meta.env.BASE_URL, "");
if (baseUrl.startsWith("/")) {
  baseUrl = baseUrl.slice(1);
}
const parentUrl = getArticleParentPath(baseUrl);
---

{
  coverImage && (
    <BaseImage
      aspectRatio={2 / 1}
      fit={"cover"}
      href={coverImage}
      alt="cover image."
    />
  )
}
<h1>{title}</h1>
{
  !hideParent &&
  !!parentUrl?.length && (
    <h6>
      <Icon name="mdi:folder" />
      <GroupLink class="inline-flex" path={parentUrl} />
    </h6>
  )
}
{
  !hideDate && (
    <h6>
      <Icon name="mdi:calendar-check" />
      <a href={`./timeline/${formatDate(updatedDate ?? publishDate)}`}>
        {formatDate(updatedDate ?? publishDate)}
      </a>
    </h6>
  )
}
{
  description && (
    <blockquote>
      <p>{description}</p>
    </blockquote>
  )
}

<style>
  h1 {
    &:has(+ h6) {
      @apply mb-0;
    }

    & + h6 {
      &,
      & + h6 {
        @apply flex flex-row gap-2 mt-0 px-2;
      }

      &:has(+ h6) {
        @apply mb-0;
      }
    }
  }
</style>
